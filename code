
import java.io.IOException;


import org.apache.hadoop.conf.Configuration;

import org.apache.hadoop.fs.Path;

import org.apache.hadoop.io.LongWritable;

import org.apache.hadoop.io.DoubleWritable;

import org.apache.hadoop.io.Text;

import org.apache.hadoop.mapreduce.Job;

import org.apache.hadoop.mapreduce.Mapper;

import org.apache.hadoop.mapreduce.Reducer;

import org.apache.hadoop.mapreduce.Reducer.Context;

import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;

import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;


public class CloseAvg {

	//Mapper  code

	public static class MapClass extends Mapper<LongWritable,Text,Text,DoubleWritable>

	   {

			//Overloading map method 

	      public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException

	      {	    	  

	    	  	

	            String[] str = value.toString().split(",");	 // Splitting with delimiter ','

	            double closing = Double.parseDouble(str[6]); // we have the closing price at column index 6, thus we are parsing the data into double 

	            context.write(new Text(str[1]),new DoubleWritable(closing)); // Mapping the stock name and closing price

	         

	        

	      } 

	   }

	// Reducer code

	  public static class ReduceClass extends Reducer<Text,DoubleWritable,Text,DoubleWritable>

	   {

		    private DoubleWritable result = new DoubleWritable();

		    

		    public void reduce(Text key, Iterable<DoubleWritable> values,Context context) throws IOException, InterruptedException {

		      double sum = 0; // Sum - to store the total amount of closing price particular stock

		      double counter = 0; // Counter to get the number of stocks

		         for (DoubleWritable val : values)

		         {  

		        	sum += val.get(); 

		        	counter++;

		         }

		         

		         double avg = sum/counter; // dividing we get the average 

		         

		      result.set(avg);		     

		      context.write(key, result);  // Writing to output

		    

		      

		    }

	   }

	  // Main method

	  public static void main(String[] args) throws Exception {

		    Configuration conf = new Configuration();

		    Job job = Job.getInstance(conf, "Avg Closing");

		    job.setJarByClass(CloseAvg.class);

		    job.setMapperClass(MapClass.class);

		    job.setReducerClass(ReduceClass.class);

		    job.setNumReduceTasks(1);

		    job.setOutputKeyClass(Text.class);

		    job.setOutputValueClass(DoubleWritable.class);

		    FileInputFormat.addInputPath(job, new Path(args[0]));

		    FileOutputFormat.setOutputPath(job, new Path(args[1]));

		    System.exit(job.waitForCompletion(true) ? 0 : 1);

		  }

}
